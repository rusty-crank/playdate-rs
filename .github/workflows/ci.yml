name: Cargo Build & Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  PLAYDATE_SDK_VERSION: 2.0.3
  PLAYDATE_SDK_PATH: ${{ github.workspace }}/PlaydateSDK

jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - thumbv7em-none-eabihf
        profile:
          - debug
          - release
    env:
      CARGO_BUILD_FLAGS: --target ${{ matrix.target }} ${{ matrix.profile == 'release' && '--release' || '' }}
    steps:
      # Checkout repo
      - name: Checkout
        uses: actions/checkout@v3
      # Install Playdate SDK
      - name: Install Playdate SDK
        run: |
          mkdir PlaydateSDK
          curl -L https://download-keycdn.panic.com/playdate_sdk/Linux/PlaydateSDK-${{ env.PLAYDATE_SDK_VERSION }}.tar.gz | tar xz --strip 1 -C PlaydateSDK
      # Setup up rust toolchain
      - name: Setup Rust Toolchain
        run: rustup update stable && rustup target add ${{ matrix.target }}
      # Build all projects except playdate-cli
      - name: Cargo Build (${{ matrix.target }}, ${{ matrix.profile }})
        run: cargo build --workspace ${{ matrix.CARGO_BUILD_FLAGS }} --exclude playdate-cli
      # Test sys package
      - name: Cargo Test (${{ matrix.target }}, ${{ matrix.profile }})
        run: cargo test -p playdate-rs-sys ${{ matrix.CARGO_BUILD_FLAGS }}
        if: ${{ matrix.target == 'x86_64-unknown-linux-gnu' }}
      # Format checks
      - name: Cargo clippy checks
        run: cargo clippy ${{ matrix.CARGO_BUILD_FLAGS }} -- -D warnings
        if: ${{ matrix.target == 'x86_64-unknown-linux-gnu' }}

  format-checks:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - name: Checkout
        uses: actions/checkout@v3
      # Setup up rust toolchain
      - name: Setup Rust Toolchain
        run: rustup update stable
      # Format checks
      - name: Cargo fmt checks
        run: cargo fmt -- --check
